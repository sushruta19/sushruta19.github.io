---
const navElements = [
  {
    id: 1,
    name: "Home",
    path: "/",
  },
  // {
  //   id: 2,
  //   name: "Story",
  //   path: "/story",
  // },
  {
    id: 3,
    name: "Articles",
    path: "/articles",
  },
  {
    id: 4,
    name: "Experiences",
    path: "/experiences",
  },
  {
    id: 5,
    name: "Projects",
    path: "/projects",
  },
];
import profileImg from "../images/profile-img.png";
import contacts from "../content/contacts.js";
---

<header
  class="p-4 sticky top-0 backdrop-filter backdrop-blur-sm bg-opacity-30 z-10"
>
  <section class="flex justify-between items-center container">
    <a href="/">
      <img
        src={profileImg.src}
        alt="Soubhik Sen (icon)"
        class="w-8 h-8 rounded-full"
      />
    </a>
    <nav class="pointer-events-auto hidden sm:block">
      <ul
        class="flex rounded-full px-3 text-sm font-medium shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-black"
      >
        {
          navElements.map((element) => (
            <li class="relative inline-flex px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-300 navElement">
              <a href={element.path}>{element.name}</a>
            </li>
          ))
        }
        <li
          class="relative inline-flex px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-300"
        >
          <a
            target="_blank"
            rel="noopener noreferrer"
            href={contacts.resume.url}
            >{contacts.resume.name}</a
          >
        </li>
      </ul>
    </nav>
    <div class="flex sm:block">
      <button
        type="button"
        class="group flex sm:hidden mr-2 items-center rounded-full px-3 py-2 shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-black"
        id="navigationBtn"
        >Navigation
        <svg
          class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-300"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 8 6"
          aria-hidden="true"
          ><path
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            d="M1.75 1.75 4 4.25l2.25-2.5"></path></svg
        ></button
      >
      <section
        class="hidden fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white dark:bg-zinc-900 p-8 ring-1 ring-zinc-900/5 dark:ring-zinc-700 opacity-100 scale-100 transition-all duration-75"
        id="mobileNav"
      >
        <section class="flex flex-row-reverse items-center justify-between">
          <button class="-m-1 p-1" id="closeNavBtn"
            ><svg
              class="h-6 w-6 text-zinc-500 dark:text-zinc-300"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              aria-hidden="true"
              ><path
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="1.5"
                d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5"></path></svg
            ></button
          >
          <h3 class="text-sm font-medium text-zinc-700 dark:text-zinc-500">
            Navigation
          </h3>
        </section>
        <nav class="mt-6">
          <ul
            class="-my-2 flex flex-col divide-zinc-100 dark:divide-zinc-100/5 text-base text-zinc-900 dark:text-zinc-300"
          >
            {
              navElements.map((el) => (
                <li class="relative inline-flex px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-300 navElement">
                  <a href={el.path}>{el.name}</a>
                </li>
              ))
            }
            <li
              class="relative inline-flex px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-300"
            >
              <a
                target="_blank"
                rel="noopener noreferrer"
                href={contacts.resume.url}
                >{contacts.resume.name}</a
              >
            </li>
          </ul>
        </nav>
      </section>
      <button
        type="button"
        class="group flex rounded-full px-3 py-2 shadow shadow-zinc-900/5 text-zinc-900 dark:text-zinc-300 ring-1 ring-zinc-900/5 dark:ring-zinc-700/90 bg-zinc-50 dark:bg-white"
        id="themeBtn"
        >
        <span class="sr-only">theme</span>
        <svg
          class="inline-flex dark:hidden h-6 w-6 fill-zinc-700 stroke-zinc-500"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          aria-hidden="true"
          ><path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            d="M17.25 16.22a6.937 6.937 0 0 1-9.47-9.47 7.451 7.451 0 1 0 9.47 9.47ZM12.75 7C17 7 17 2.75 17 2.75S17 7 21.25 7C17 7 17 11.25 17 11.25S17 7 12.75 7Z"
          ></path></svg
        >
        
        <svg
          class="hidden dark:inline-flex h-6 w-6 fill-zinc-100 stroke-zinc-500 group-hover:fill-zinc-300 group-hover:stroke-zinc-700"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          aria-hidden="true"
          ><path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
          ></path></svg
        >
        </button
      >
    </div>
  </section>
</header>

<script>
  const mobileNav = document.querySelector("#mobileNav");
  const navigationBtn = document.querySelector("#navigationBtn");
  const closeNavBtn = document.querySelector("#closeNavBtn");
  const themeBtn = document.querySelector("#themeBtn");

  const pathname = window.location.pathname;

  const navElements = document.querySelectorAll(".navElement");
  navElements.forEach((el) => {
    el = el.querySelector("a") as HTMLElement;
    if (
      el.getAttribute("href") === pathname ||
      `${el.getAttribute("href")}/` === pathname
    ) {
      el.classList.add("text-teal-500", "dark:text-teal-300");
    }
  });

  document.addEventListener("click", (e) => {
    if (
      e.target !== mobileNav &&
      e.target !== navigationBtn &&
      !mobileNav?.contains(e.target as Node)
    ) {
      mobileNav?.classList.add("hidden");
    }
  });

  closeNavBtn?.addEventListener("click", () => {
    mobileNav?.classList.add("hidden");
  });

  navigationBtn?.addEventListener("click", () => {
    mobileNav?.classList.remove("hidden");
  });

  themeBtn?.addEventListener("click", () => {
    document.documentElement.classList.toggle("dark");
    const t = document.documentElement.classList.contains("dark")
      ? "dark"
      : "light";
    localStorage.setItem("theme", t);
    if (t === "dark") {
      document.body.classList.add("darkDots");
    } else {
      document.body.classList.remove("darkDots");
    }

    // // Dispatch custom event for theme change
    // const themeChangeEvent = new CustomEvent('themeChange', { detail: { theme: t } });
    // window.dispatchEvent(themeChangeEvent);
  });
</script>

<style></style>
